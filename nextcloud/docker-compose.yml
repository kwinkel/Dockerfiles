version: "2"

networks:
  reverseproxy:
    external:
      name: traefik_reverseproxy

services:
  postgres:
    image: postgres
    restart: unless-stopped
    volumes:
      - ${VOLUMES_ROOT_PATH}/postgres:/var/lib/postgresql/data
    networks:
      - default
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}

  redis:
    image: redis
    restart: unless-stopped
    networks:
      - default

  nextcloud:  
    build: ./nextcloud
    restart: unless-stopped
    volumes:
      - ${VOLUMES_ROOT_PATH}/html:/var/www/html
    depends_on:
      - postgres
      - redis
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
    networks:
      - default
      - reverseproxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_reverseproxy"
      - "traefik.port=80"
      - "traefik.frontend.rule=Host:${NEXTCLOUD_DOMAIN}"
      - "traefik.frontend.headers.STSSeconds=15552000"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"

  cron:
    build: ./nextcloud
    restart: unless-stopped
    volumes:
      - ${VOLUMES_ROOT_PATH}/html:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - nextcloud
